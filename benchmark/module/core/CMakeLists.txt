##==================================================================================================
##  EVE - Expressive Vector Engine
##  Copyright 2019 Joel FALCOU
##  Copyright 2019 Jean-Thierry LAPRESTE
##
##  Licensed under the MIT License <http://opensource.org/licenses/MIT>.
##  SPDX-License-Identifier: MIT
##==================================================================================================

##==================================================================================================
## scalar benchmarks
list_benchs("scalar/bitwise_and" "core" ${all_types})
list_benchs("scalar/add" "core" ${all_types})
list_benchs("scalar/sub" "core" ${all_types})
list_benchs("scalar/mul" "core" ${all_types})
list_benchs("scalar/logical_xor" "core" ${all_types})
list_benchs("scalar/logical_ornot" "core" ${all_types})
list_benchs("scalar/logical_or" "core" ${all_types})
list_benchs("scalar/logical_notor" "core" ${all_types})
list_benchs("scalar/logical_notand" "core" ${all_types})
list_benchs("scalar/logical_andnot" "core" ${all_types})
list_benchs("scalar/logical_and" "core" ${all_types})
list_benchs("scalar/is_unordered" "core" ${all_types})
list_benchs("scalar/is_ordered" "core" ${all_types})
list_benchs("scalar/is_not_less" "core" ${all_types})
list_benchs("scalar/is_not_less_equal" "core" ${all_types})
list_benchs("scalar/is_not_greater_equal" "core" ${all_types})
list_benchs("scalar/is_not_equal_with_equal_nans" "core" ${all_types})
list_benchs("scalar/is_not_equal" "core" ${all_types})
list_benchs("scalar/is_less" "core" ${all_types})
list_benchs("scalar/is_lessgreater" "core" ${all_types})
list_benchs("scalar/is_less_equal" "core" ${all_types})
list_benchs("scalar/is_greater" "core" ${all_types})
list_benchs("scalar/is_greater_equal" "core" ${all_types})
list_benchs("scalar/is_equal_with_equal_nans" "core" ${all_types})
list_benchs("scalar/is_equal" "core" ${all_types})
list_benchs("scalar/bitwise_xor" "core" ${all_types})
list_benchs("scalar/bitwise_ornot" "core" ${all_types})
list_benchs("scalar/bitwise_or" "core" ${all_types})
list_benchs("scalar/bitwise_notor" "core" ${all_types})
list_benchs("scalar/bitwise_notand" "core" ${all_types})
list_benchs("scalar/bitwise_andnot" "core" ${all_types})
list_benchs("scalar/is_not_greater" "core" ${all_types})
list_benchs("scalar/abs" "core" ${all_types})
list_benchs("scalar/unary_plus" "core" ${all_types})
list_benchs("scalar/unary_minus" "core" ${all_types})
list_benchs("scalar/logical_not" "core" ${all_types})
list_benchs("scalar/is_positive" "core" ${all_types})
list_benchs("scalar/is_not_nan" "core" ${all_types})
list_benchs("scalar/is_not_inf" "core" ${all_types})
list_benchs("scalar/is_not_finite" "core" ${all_types})
list_benchs("scalar/is_ngez" "core" ${all_types})
list_benchs("scalar/is_nez" "core" ${all_types})
list_benchs("scalar/is_nan" "core" ${all_types})
list_benchs("scalar/is_ltz" "core" ${all_types})
list_benchs("scalar/is_lez" "core" ${all_types})
list_benchs("scalar/is_inf" "core" ${all_types})
list_benchs("scalar/is_imag" "core" ${all_types})
list_benchs("scalar/is_gtz" "core" ${all_types})
list_benchs("scalar/is_gez" "core" ${all_types})
list_benchs("scalar/is_finite" "core" ${all_types})
list_benchs("scalar/is_eqz" "core" ${all_types})
list_benchs("scalar/is_denormal" "core" ${all_types})
list_benchs("scalar/bitwise_not" "core" ${all_types})
list_benchs("scalar/bitwise_mask" "core" ${all_types})
list_benchs("scalar/is_negative" "core" ${all_types})


##==================================================================================================
## SIMD< benchmarks
list_benchs("simd/bitwise_and" "core" ${all_types})
list_benchs("simd/add" "core" ${all_types})
list_benchs("simd/sub" "core" ${all_types})
list_benchs("simd/mul" "core" ${all_types})
list_benchs("simd/logical_xor" "core" ${all_types})
list_benchs("simd/logical_ornot" "core" ${all_types})
list_benchs("simd/logical_or" "core" ${all_types})
list_benchs("simd/logical_notor" "core" ${all_types})
list_benchs("simd/logical_notand" "core" ${all_types})
list_benchs("simd/logical_andnot" "core" ${all_types})
list_benchs("simd/logical_and" "core" ${all_types})
list_benchs("simd/is_unordered" "core" ${all_types})
list_benchs("simd/is_ordered" "core" ${all_types})
list_benchs("simd/is_not_less" "core" ${all_types})
list_benchs("simd/is_not_less_equal" "core" ${all_types})
list_benchs("simd/is_not_greater_equal" "core" ${all_types})
list_benchs("simd/is_not_equal_with_equal_nans" "core" ${all_types})
list_benchs("simd/is_not_equal" "core" ${all_types})
list_benchs("simd/is_less" "core" ${all_types})
list_benchs("simd/is_lessgreater" "core" ${all_types})
list_benchs("simd/is_less_equal" "core" ${all_types})
list_benchs("simd/is_greater" "core" ${all_types})
list_benchs("simd/is_greater_equal" "core" ${all_types})
list_benchs("simd/is_equal_with_equal_nans" "core" ${all_types})
list_benchs("simd/is_equal" "core" ${all_types})
list_benchs("simd/bitwise_xor" "core" ${all_types})
list_benchs("simd/bitwise_ornot" "core" ${all_types})
list_benchs("simd/bitwise_or" "core" ${all_types})
list_benchs("simd/bitwise_notor" "core" ${all_types})
list_benchs("simd/bitwise_notand" "core" ${all_types})
list_benchs("simd/bitwise_andnot" "core" ${all_types})
list_benchs("simd/is_not_greater" "core" ${all_types})
list_benchs("simd/abs" "core" ${all_types})
list_benchs("simd/unary_plus" "core" ${all_types})
list_benchs("simd/unary_minus" "core" ${all_types})
list_benchs("simd/logical_not" "core" ${all_types})
list_benchs("simd/is_positive" "core" ${all_types})
list_benchs("simd/is_not_nan" "core" ${all_types})
list_benchs("simd/is_not_inf" "core" ${all_types})
list_benchs("simd/is_not_finite" "core" ${all_types})
list_benchs("simd/is_ngez" "core" ${all_types})
list_benchs("simd/is_nez" "core" ${all_types})
list_benchs("simd/is_nan" "core" ${all_types})
list_benchs("simd/is_ltz" "core" ${all_types})
list_benchs("simd/is_lez" "core" ${all_types})
list_benchs("simd/is_inf" "core" ${all_types})
list_benchs("simd/is_imag" "core" ${all_types})
list_benchs("simd/is_gtz" "core" ${all_types})
list_benchs("simd/is_gez" "core" ${all_types})
list_benchs("simd/is_finite" "core" ${all_types})
list_benchs("simd/is_eqz" "core" ${all_types})
list_benchs("simd/is_denormal" "core" ${all_types})
list_benchs("simd/bitwise_not" "core" ${all_types})
list_benchs("simd/bitwise_mask" "core" ${all_types})
list_benchs("simd/is_negative" "core" ${all_types})
