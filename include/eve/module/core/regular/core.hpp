//==================================================================================================
/*
  EVE - Expressive Vector Engine
  Copyright : EVE Project Contributors
  SPDX-License-Identifier: BSL-1.0
*/
//==================================================================================================
#pragma once

#include <eve/module/core/abs.hpp>
#include <eve/module/core/absmax.hpp>
#include <eve/module/core/absmin.hpp>
#include <eve/module/core/add.hpp>
#include <eve/module/core/agm.hpp>
#include <eve/module/core/all.hpp>
#include <eve/module/core/any.hpp>
#include <eve/module/core/average.hpp>
#include <eve/module/core/binarize.hpp>
#include <eve/module/core/binarize_not.hpp>
#include <eve/module/core/bit_and.hpp>
#include <eve/module/core/bit_andnot.hpp>
#include <eve/module/core/bit_ceil.hpp>
#include <eve/module/core/bit_flip.hpp>
#include <eve/module/core/bit_floor.hpp>
#include <eve/module/core/bit_mask.hpp>
#include <eve/module/core/bit_not.hpp>
#include <eve/module/core/bit_notand.hpp>
#include <eve/module/core/bit_notor.hpp>
#include <eve/module/core/bit_or.hpp>
#include <eve/module/core/bit_ornot.hpp>
#include <eve/module/core/bit_reverse.hpp>
#include <eve/module/core/bit_select.hpp>
#include <eve/module/core/bit_set.hpp>
#include <eve/module/core/bit_shl.hpp>
#include <eve/module/core/bit_shr.hpp>
#include <eve/module/core/bit_swap_adjacent.hpp>
#include <eve/module/core/bit_swap_pairs.hpp>
#include <eve/module/core/bit_unset.hpp>
#include <eve/module/core/bit_width.hpp>
#include <eve/module/core/bit_xor.hpp>
#include <eve/module/core/bitofsign.hpp>
#include <eve/module/core/broadcast.hpp>
#include <eve/module/core/broadcast_group.hpp>
#include <eve/module/core/byte_reverse.hpp>
#include <eve/module/core/byte_swap_adjacent.hpp>
#include <eve/module/core/byte_swap_pairs.hpp>
#include <eve/module/core/ceil.hpp>
#include <eve/module/core/clamp.hpp>
#include <eve/module/core/combine.hpp>
#include <eve/module/core/conj.hpp>
#include <eve/module/core/convert.hpp>
#include <eve/module/core/converter.hpp>
#include <eve/module/core/copysign.hpp>
#include <eve/module/core/count_true.hpp>
#include <eve/module/core/countl_one.hpp>
#include <eve/module/core/countl_zero.hpp>
#include <eve/module/core/countr_one.hpp>
#include <eve/module/core/countr_zero.hpp>
#include <eve/module/core/dec.hpp>
#include <eve/module/core/deinterleave_groups.hpp>
#include <eve/module/core/deinterleave_groups_shuffle.hpp>
#include <eve/module/core/diff_of_prod.hpp>
#include <eve/module/core/dist.hpp>
#include <eve/module/core/div.hpp>
#include <eve/module/core/dot.hpp>
#include <eve/module/core/epsilon.hpp>
#include <eve/module/core/exponent.hpp>
#include <eve/module/core/fam.hpp>
#include <eve/module/core/fanm.hpp>
#include <eve/module/core/fdim.hpp>
#include <eve/module/core/first_true.hpp>
#include <eve/module/core/firstbitset.hpp>
#include <eve/module/core/firstbitunset.hpp>
#include <eve/module/core/floor.hpp>
#include <eve/module/core/fma.hpp>
#include <eve/module/core/fmod.hpp>
#include <eve/module/core/fms.hpp>
#include <eve/module/core/fnma.hpp>
#include <eve/module/core/fnms.hpp>
#include <eve/module/core/frac.hpp>
#include <eve/module/core/fracscale.hpp>
#include <eve/module/core/frexp.hpp>
#include <eve/module/core/fsm.hpp>
#include <eve/module/core/fsnm.hpp>
#include <eve/module/core/gather.hpp>
#include <eve/module/core/has_equal_in.hpp>
#include <eve/module/core/has_single_bit.hpp>
#include <eve/module/core/hi.hpp>
#include <eve/module/core/if_else.hpp>
#include <eve/module/core/ifnot_else.hpp>
#include <eve/module/core/ifrexp.hpp>
#include <eve/module/core/inc.hpp>
#include <eve/module/core/interleave.hpp>
#include <eve/module/core/interleave_shuffle.hpp>
#include <eve/module/core/is_denormal.hpp>
#include <eve/module/core/is_equal.hpp>
#include <eve/module/core/is_eqz.hpp>
#include <eve/module/core/is_even.hpp>
#include <eve/module/core/is_finite.hpp>
#include <eve/module/core/is_flint.hpp>
#include <eve/module/core/is_gez.hpp>
#include <eve/module/core/is_gtz.hpp>
#include <eve/module/core/is_imag.hpp>
#include <eve/module/core/is_infinite.hpp>
#include <eve/module/core/is_less.hpp>
#include <eve/module/core/is_less_equal.hpp>
#include <eve/module/core/is_lessgreater.hpp>
#include <eve/module/core/is_lez.hpp>
#include <eve/module/core/is_ltz.hpp>
#include <eve/module/core/is_nan.hpp>
#include <eve/module/core/is_negative.hpp>
#include <eve/module/core/is_ngez.hpp>
#include <eve/module/core/is_ngtz.hpp>
#include <eve/module/core/is_nlez.hpp>
#include <eve/module/core/is_nltz.hpp>
#include <eve/module/core/is_normal.hpp>
#include <eve/module/core/is_not_denormal.hpp>
#include <eve/module/core/is_not_equal.hpp>
#include <eve/module/core/is_not_finite.hpp>
#include <eve/module/core/is_not_flint.hpp>
#include <eve/module/core/is_not_greater.hpp>
#include <eve/module/core/is_not_greater_equal.hpp>
#include <eve/module/core/is_not_imag.hpp>
#include <eve/module/core/is_not_infinite.hpp>
#include <eve/module/core/is_not_less.hpp>
#include <eve/module/core/is_not_less_equal.hpp>
#include <eve/module/core/is_not_nan.hpp>
#include <eve/module/core/is_not_real.hpp>
#include <eve/module/core/is_odd.hpp>
#include <eve/module/core/is_ordered.hpp>
#include <eve/module/core/is_positive.hpp>
#include <eve/module/core/is_pow2.hpp>
#include <eve/module/core/is_real.hpp>
#include <eve/module/core/is_unit.hpp>
#include <eve/module/core/is_unordered.hpp>
#include <eve/module/core/last_true.hpp>
#include <eve/module/core/ldexp.hpp>
#include <eve/module/core/lerp.hpp>
#include <eve/module/core/lo.hpp>
#include <eve/module/core/load.hpp>
#include <eve/module/core/logical_andnot.hpp>
#include <eve/module/core/logical_notand.hpp>
#include <eve/module/core/logical_notor.hpp>
#include <eve/module/core/logical_ornot.hpp>
#include <eve/module/core/logical_xor.hpp>
#include <eve/module/core/lohi.hpp>
#include <eve/module/core/lookup.hpp>
#include <eve/module/core/manhattan.hpp>
#include <eve/module/core/mantissa.hpp>
#include <eve/module/core/max.hpp>
#include <eve/module/core/maxabs.hpp>
#include <eve/module/core/maximum.hpp>
#include <eve/module/core/maxmag.hpp>
#include <eve/module/core/min.hpp>
#include <eve/module/core/minabs.hpp>
#include <eve/module/core/minimum.hpp>
#include <eve/module/core/minmag.hpp>
#include <eve/module/core/minmax.hpp>
#include <eve/module/core/minus.hpp>
#include <eve/module/core/modf.hpp>
#include <eve/module/core/mul.hpp>
#include <eve/module/core/nb_values.hpp>
#include <eve/module/core/nearest.hpp>
#include <eve/module/core/negabsmax.hpp>
#include <eve/module/core/negabsmin.hpp>
#include <eve/module/core/negate.hpp>
#include <eve/module/core/negatenz.hpp>
#include <eve/module/core/negmaxabs.hpp>
#include <eve/module/core/negminabs.hpp>
#include <eve/module/core/next.hpp>
#include <eve/module/core/nextafter.hpp>
#include <eve/module/core/none.hpp>
#include <eve/module/core/oneminus.hpp>
#include <eve/module/core/plus.hpp>
#include <eve/module/core/popcount.hpp>
#include <eve/module/core/prev.hpp>
#include <eve/module/core/rat.hpp>
#include <eve/module/core/read.hpp>
#include <eve/module/core/rec.hpp>
#include <eve/module/core/reduce.hpp>
#include <eve/module/core/refine_rec.hpp>
#include <eve/module/core/reldist.hpp>
#include <eve/module/core/rem.hpp>
#include <eve/module/core/remainder.hpp>
#include <eve/module/core/replace.hpp>
#include <eve/module/core/rotate.hpp>
#include <eve/module/core/rotl.hpp>
#include <eve/module/core/rotr.hpp>
#include <eve/module/core/round.hpp>
#include <eve/module/core/roundscale.hpp>
#include <eve/module/core/rshl.hpp>
#include <eve/module/core/rshr.hpp>
#include <eve/module/core/rsqrt.hpp>
#include <eve/module/core/safe.hpp>
#include <eve/module/core/saturate.hpp>
#include <eve/module/core/scan.hpp>
#include <eve/module/core/scatter.hpp>
#include <eve/module/core/shl.hpp>
#include <eve/module/core/shr.hpp>
#include <eve/module/core/shuffle_v2.hpp>
#include <eve/module/core/sign.hpp>
#include <eve/module/core/sign_alternate.hpp>
#include <eve/module/core/signnz.hpp>
#include <eve/module/core/slide_left.hpp>
#include <eve/module/core/slide_right.hpp>
#include <eve/module/core/sort.hpp>
#include <eve/module/core/sqr.hpp>
#include <eve/module/core/sqr_abs.hpp>
#include <eve/module/core/sqrt.hpp>
#include <eve/module/core/store.hpp>
#include <eve/module/core/sub.hpp>
#include <eve/module/core/sum_of_prod.hpp>
#include <eve/module/core/swap_if.hpp>
#include <eve/module/core/swap_pairs.hpp>
#include <eve/module/core/trunc.hpp>
#include <eve/module/core/try_each_group_position.hpp>
#include <eve/module/core/two_add.hpp>
#include <eve/module/core/two_prod.hpp>
#include <eve/module/core/ulpdist.hpp>
#include <eve/module/core/unalign.hpp>
#include <eve/module/core/unsafe.hpp>
#include <eve/module/core/write.hpp>
