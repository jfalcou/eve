##==================================================================================================
##  EVE - Expressive Vector Engine
##  Copyright : EVE Contributors & Maintainers
##  SPDX-License-Identifier: MIT
##==================================================================================================

add_custom_target(unit.arithmetic.exe         )
add_dependencies(unit.exe unit.arithmetic.exe )

make_unit("unit.arithmetic" abs.cpp                 )
make_unit("unit.arithmetic" absmax.cpp              )
make_unit("unit.arithmetic" absmin.cpp              )
make_unit("unit.arithmetic" add.cpp                 )
make_unit("unit.arithmetic" agm.cpp                 )
make_unit("unit.arithmetic" average.cpp             )
make_unit("unit.arithmetic" binarize.cpp            )
make_unit("unit.arithmetic" binarize_not.cpp        )
make_unit("unit.arithmetic" bit_ceil.cpp            )
make_unit("unit.arithmetic" bit_floor.cpp           )
make_unit("unit.arithmetic" ceil.cpp                )
make_unit("unit.arithmetic" clamp.cpp               )
make_unit("unit.arithmetic" constants.cpp           )
make_unit("unit.arithmetic" copysign.cpp            )
make_unit("unit.arithmetic" dec.cpp                 )
make_unit("unit.arithmetic" dist.cpp                )
make_unit("unit.arithmetic" div.cpp                 )
make_unit("unit.arithmetic" epsilon.cpp             )
make_unit("unit.arithmetic" exponent.cpp            )
make_unit("unit.arithmetic" fam.cpp                 )
make_unit("unit.arithmetic" fanm.cpp                )
make_unit("unit.arithmetic" fdim.cpp                )
make_unit("unit.arithmetic" floor.cpp               )
make_unit("unit.arithmetic" fma.cpp                 )
#make_unit("unit.arithmetic" fmod.cpp                )
make_unit("unit.arithmetic" fms.cpp                 )
make_unit("unit.arithmetic" fnma.cpp                )
make_unit("unit.arithmetic" fnms.cpp                )
make_unit("unit.arithmetic" frac.cpp                )
make_unit("unit.arithmetic" fracscale.cpp           )
make_unit("unit.arithmetic" frexp.cpp               )
make_unit("unit.arithmetic" fsm.cpp                 )
make_unit("unit.arithmetic" fsnm.cpp                )
make_unit("unit.arithmetic" hi.cpp                  )
#make_unit("unit.arithmetic" ifrexp.cpp             )
make_unit("unit.arithmetic" inc.cpp                 )
make_unit("unit.arithmetic" is_denormal.cpp         )
make_unit("unit.arithmetic" is_equal.cpp            )
make_unit("unit.arithmetic" is_eqz.cpp              )
make_unit("unit.arithmetic" is_even.cpp             )
make_unit("unit.arithmetic" is_finite.cpp           )
make_unit("unit.arithmetic" is_flint.cpp            )
make_unit("unit.arithmetic" is_gez.cpp              )
make_unit("unit.arithmetic" is_gtz.cpp              )
make_unit("unit.arithmetic" is_imag.cpp             )
make_unit("unit.arithmetic" is_less_equal.cpp       )
make_unit("unit.arithmetic" is_less.cpp             )
make_unit("unit.arithmetic" is_lessgreater.cpp      )
make_unit("unit.arithmetic" is_lez.cpp              )
make_unit("unit.arithmetic" is_ltz.cpp              )
make_unit("unit.arithmetic" is_nan.cpp              )
make_unit("unit.arithmetic" is_negative.cpp         )
make_unit("unit.arithmetic" is_ngez.cpp             )
make_unit("unit.arithmetic" is_ngtz.cpp             )
make_unit("unit.arithmetic" is_nlez.cpp             )
make_unit("unit.arithmetic" is_nltz.cpp             )
make_unit("unit.arithmetic" is_normal.cpp           )
make_unit("unit.arithmetic" is_not_denormal.cpp     )
make_unit("unit.arithmetic" is_not_equal.cpp        )
make_unit("unit.arithmetic" is_not_finite.cpp       )
make_unit("unit.arithmetic" is_not_flint.cpp        )
make_unit("unit.arithmetic" is_not_greater_equal.cpp)
make_unit("unit.arithmetic" is_not_greater.cpp      )
make_unit("unit.arithmetic" is_not_imag.cpp         )
make_unit("unit.arithmetic" is_not_infinite.cpp     )
make_unit("unit.arithmetic" is_not_less_equal.cpp   )
make_unit("unit.arithmetic" is_not_less.cpp         )
make_unit("unit.arithmetic" is_not_nan.cpp          )
make_unit("unit.arithmetic" is_not_real.cpp         )
make_unit("unit.arithmetic" is_odd.cpp              )
make_unit("unit.arithmetic" is_ordered.cpp          )
make_unit("unit.arithmetic" is_positive.cpp         )
make_unit("unit.arithmetic" is_pow2.cpp             )
make_unit("unit.arithmetic" is_real.cpp             )
make_unit("unit.arithmetic" is_unordered.cpp        )
make_unit("unit.arithmetic" ldexp.cpp               )
make_unit("unit.arithmetic" lerp.cpp                )
make_unit("unit.arithmetic" logical_andnot.cpp      )
make_unit("unit.arithmetic" logical_notand.cpp      )
make_unit("unit.arithmetic" logical_notor.cpp       )
make_unit("unit.arithmetic" logical_ornot.cpp       )
make_unit("unit.arithmetic" logical_xor.cpp         )
make_unit("unit.arithmetic" lohi.cpp                )
make_unit("unit.arithmetic" lo.cpp                  )
make_unit("unit.arithmetic" manhattan.cpp           )
make_unit("unit.arithmetic" mantissa.cpp            )
make_unit("unit.arithmetic" maxabs.cpp              )
make_unit("unit.arithmetic" max.cpp                 )
make_unit("unit.arithmetic" maxmag.cpp              )
make_unit("unit.arithmetic" minabs.cpp              )
make_unit("unit.arithmetic" min.cpp                 )
make_unit("unit.arithmetic" minmag.cpp              )
make_unit("unit.arithmetic" minus.cpp               )
make_unit("unit.arithmetic" modf.cpp                )
make_unit("unit.arithmetic" mul.cpp                 )
make_unit("unit.arithmetic" nearest.cpp             )
make_unit("unit.arithmetic" negabsmax.cpp           )
make_unit("unit.arithmetic" negabsmin.cpp           )
make_unit("unit.arithmetic" negate.cpp              )
make_unit("unit.arithmetic" negatenz.cpp            )
make_unit("unit.arithmetic" negmaxabs.cpp           )
make_unit("unit.arithmetic" negminabs.cpp           )
make_unit("unit.arithmetic" nextafter.cpp           )
make_unit("unit.arithmetic" next.cpp                )
make_unit("unit.arithmetic" oneminus.cpp            )
make_unit("unit.arithmetic" plus.cpp                )
make_unit("unit.arithmetic" prev.cpp                )
make_unit("unit.arithmetic" rat.cpp                 )
make_unit("unit.arithmetic" rec.cpp                 )
#make_unit("unit.arithmetic" remainder.cpp          )
make_unit("unit.arithmetic" remdiv.cpp              )
make_unit("unit.arithmetic" rem.cpp                 )
make_unit("unit.arithmetic" rotl.cpp                )
make_unit("unit.arithmetic" rotr.cpp                )
make_unit("unit.arithmetic" round.cpp               )
make_unit("unit.arithmetic" roundscale.cpp          )
make_unit("unit.arithmetic" rshl.cpp                )
make_unit("unit.arithmetic" rshr.cpp                )
make_unit("unit.arithmetic" rsqrt.cpp               )
make_unit("unit.arithmetic" shl.cpp                 )
make_unit("unit.arithmetic" shr.cpp                 )
make_unit("unit.arithmetic" sign.cpp                )
make_unit("unit.arithmetic" significants.cpp        )
make_unit("unit.arithmetic" signnz.cpp              )
make_unit("unit.arithmetic" sqr_abs.cpp             )
make_unit("unit.arithmetic" sqr.cpp                 )
make_unit("unit.arithmetic" sqrt.cpp                )
make_unit("unit.arithmetic" sub.cpp                 )
make_unit("unit.arithmetic" trunc.cpp               )
#make_unit("unit.arithmetic" two_add.cpp              )
#make_unit("unit.arithmetic" two_prod.cpp             )
make_unit("unit.arithmetic" ulpdist.cpp             )
