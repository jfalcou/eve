##==================================================================================================
##  EVE - Expressive Vector Engine
##  Copyright : EVE Contributors & Maintainers
##  SPDX-License-Identifier: MIT
##==================================================================================================

add_custom_target(unit.ad.exe                )
add_dependencies(unit.exe unit.ad.exe        )


##==================================================================================================
## tests
##==================================================================================================
make_unit("unit.ad" abs.cpp                 )
make_unit("unit.ad" absmax.cpp              )
make_unit("unit.ad" absmin.cpp              )
make_unit("unit.ad" add.cpp                 )
make_unit("unit.ad" atan2.cpp               )
make_unit("unit.ad" average.cpp             )
make_unit("unit.ad" ceil.cpp                )
make_unit("unit.ad" clamp.cpp               )
make_unit("unit.ad" copysign.cpp            )
make_unit("unit.ad" dec.cpp                 )
make_unit("unit.ad" dist.cpp                )
make_unit("unit.ad" div.cpp                 )
make_unit("unit.ad" fam.cpp                 )
make_unit("unit.ad" fanm.cpp                )
make_unit("unit.ad" fdim.cpp                )
make_unit("unit.ad" floor.cpp               )
make_unit("unit.ad" fma.cpp                 )
##################################make_unit("unit.ad" fmod.cpp                )
make_unit("unit.ad" fms.cpp                 )
make_unit("unit.ad" fnma.cpp                )
make_unit("unit.ad" fnms.cpp                )
make_unit("unit.ad" frac.cpp                )
#################################make_unit("unit.ad" fracscale.cpp           )
#################################make_unit("unit.ad" frexp.cpp               )
make_unit("unit.ad" fsm.cpp                 )
make_unit("unit.ad" fsnm.cpp                )
make_unit("unit.ad" hi.cpp                  )
make_unit("unit.ad" if_else.cpp             )
##################################make_unit("unit.ad" ifrexp.cpp              )
make_unit("unit.ad" inc.cpp                 )
make_unit("unit.ad" is_denormal.cpp         )
make_unit("unit.ad" is_equal.cpp            )
make_unit("unit.ad" is_eqz.cpp              )
make_unit("unit.ad" is_even.cpp             )
make_unit("unit.ad" is_finite.cpp           )
make_unit("unit.ad" is_flint.cpp            )
make_unit("unit.ad" is_gez.cpp              )
make_unit("unit.ad" is_gtz.cpp              )
make_unit("unit.ad" is_less.cpp             )
make_unit("unit.ad" is_less_equal.cpp       )
make_unit("unit.ad" is_lessgreater.cpp      )
make_unit("unit.ad" is_lez.cpp              )
make_unit("unit.ad" is_ltz.cpp              )
make_unit("unit.ad" is_nan.cpp              )
make_unit("unit.ad" is_negative.cpp         )
make_unit("unit.ad" is_ngez.cpp             )
make_unit("unit.ad" is_ngtz.cpp             )
make_unit("unit.ad" is_nlez.cpp             )
make_unit("unit.ad" is_nltz.cpp             )
make_unit("unit.ad" is_normal.cpp           )
make_unit("unit.ad" is_not_denormal.cpp     )
make_unit("unit.ad" is_not_equal.cpp        )
make_unit("unit.ad" is_not_finite.cpp       )
make_unit("unit.ad" is_not_flint.cpp        )
make_unit("unit.ad" is_not_greater.cpp      )
make_unit("unit.ad" is_not_greater_equal.cpp)
make_unit("unit.ad" is_not_infinite.cpp     )
make_unit("unit.ad" is_not_less.cpp         )
make_unit("unit.ad" is_not_less_equal.cpp   )
make_unit("unit.ad" is_not_nan.cpp          )
make_unit("unit.ad" is_odd.cpp              )
make_unit("unit.ad" is_ordered.cpp          )
make_unit("unit.ad" is_positive.cpp         )
make_unit("unit.ad" is_unordered.cpp        )
make_unit("unit.ad" ldexp.cpp               )
make_unit("unit.ad" lerp.cpp                )
make_unit("unit.ad" lo.cpp                  )
make_unit("unit.ad" manhattan.cpp           )
make_unit("unit.ad" mantissa.cpp            )
make_unit("unit.ad" maxabs.cpp              )
make_unit("unit.ad" max.cpp                 )
make_unit("unit.ad" maximum.cpp             )
make_unit("unit.ad" maxmag.cpp              )
make_unit("unit.ad" minabs.cpp              )
make_unit("unit.ad" min.cpp                 )
make_unit("unit.ad" minimum.cpp             )
make_unit("unit.ad" minmag.cpp              )
make_unit("unit.ad" minus.cpp               )
make_unit("unit.ad" modf.cpp                )
make_unit("unit.ad" mul.cpp                 )
make_unit("unit.ad" nearest.cpp             )
make_unit("unit.ad" negabsmax.cpp           )
make_unit("unit.ad" negabsmin.cpp           )
make_unit("unit.ad" negate.cpp              )
make_unit("unit.ad" negatenz.cpp            )

make_unit("unit.ad" negmaxabs.cpp           )
make_unit("unit.ad" negminabs.cpp           )
make_unit("unit.ad" nextafter.cpp           )
make_unit("unit.ad" next.cpp                )
make_unit("unit.ad" oneminus.cpp            )
make_unit("unit.ad" plus.cpp                )
################################################################make_unit("unit.ad" popcount.cpp            )
make_unit("unit.ad" prev.cpp                )
##################################################################make_unit("unit.ad" rat.cpp                 )
make_unit("unit.ad" rec.cpp                 )
###################################################################make_unit("unit.ad" reduce.cpp              )

##make_unit("unit.ad" remainder.cpp          )
###################################################################make_unit("unit.ad" rem.cpp                 )
###################################################################make_unit("unit.ad" remdiv.cpp              )
####################################################################make_unit("unit.ad" rotl.cpp                )
####################################################################make_unit("unit.ad" rotr.cpp                )
####################################################################make_unit("unit.ad" round.cpp               )
####################################################################make_unit("unit.ad" roundscale.cpp          )
####################################################################make_unit("unit.ad" rshl.cpp                )
####################################################################make_unit("unit.ad" rshr.cpp                )
make_unit("unit.ad" rsqrt.cpp               )
#####################################################################make_unit("unit.ad"  saturate/as_double.cpp )
#####################################################################make_unit("unit.ad"  saturate/as_float.cpp  )
#####################################################################make_unit("unit.ad"  saturate/as_int16.cpp  )
#####################################################################make_unit("unit.ad"  saturate/as_int32.cpp  )
#####################################################################make_unit("unit.ad"  saturate/as_int64.cpp  )
#####################################################################make_unit("unit.ad"  saturate/as_int8.cpp   )
#####################################################################make_unit("unit.ad"  saturate/as_uint16.cpp )
#####################################################################make_unit("unit.ad"  saturate/as_uint32.cpp )
#####################################################################make_unit("unit.ad"  saturate/as_uint64.cpp )
#####################################################################make_unit("unit.ad"  saturate/as_uint8.cpp  )
#####################################################################make_unit("unit.ad" scan.cpp                )
#####################################################################make_unit("unit.ad" shl.cpp                 )
#####################################################################make_unit("unit.ad" shr.cpp                 )
make_unit("unit.ad" sign_alternate.cpp      )
make_unit("unit.ad" sign.cpp                )
make_unit("unit.ad" signnz.cpp              )
make_unit("unit.ad" sqr_abs.cpp             )
make_unit("unit.ad" sqr.cpp                 )
make_unit("unit.ad" sqrt.cpp                )
make_unit("unit.ad" sub.cpp                 )
make_unit("unit.ad" trunc.cpp               )
#make_unit("unit.ad" ulpdist.cpp             )