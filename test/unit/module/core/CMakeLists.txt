##==================================================================================================
##  EVE - Expressive Vector Engine
##  Copyright 2018 Joel FALCOU
##  Copyright 2019 Jean-Thierry Lapreste
##
##  Licensed under the MIT License <http://opensource.org/licenses/MIT>.
##  SPDX-License-Identifier: MIT
##==================================================================================================

##==================================================================================================
## scalar tests
list_tests("abs/regular"                    "core" ${all_types})
list_tests("abs/saturated"                  "core" ${all_types})
list_tests("acos/regular"                   "core" ${real_types})
list_tests("acos/pedantic"                  "core" ${real_types})
list_tests("acosd/regular"                  "core" ${real_types})
list_tests("acosd/pedantic"                 "core" ${real_types})
list_tests("acospi/regular"                 "core" ${real_types})
list_tests("acospi/pedantic"                "core" ${real_types})
list_tests("acot/regular"                   "core" ${real_types})
list_tests("acotd/regular"                  "core" ${real_types})
list_tests("acotpi/regular"                 "core" ${real_types})
list_tests("acsc/regular"                   "core" ${real_types})
list_tests("acscd/regular"                  "core" ${real_types})
list_tests("acscpi/regular"                 "core" ${real_types})
list_tests("add/regular"                    "core" ${all_types})
list_tests("add/saturated"                  "core" ${all_types})
list_tests("add/regular_if"                 "core" ${all_types})
list_tests("add/saturated_if"               "core" ${all_types})
list_tests("all/regular"                    "core" ${all_types})
list_tests("arg/regular"                    "core" ${real_types})
list_tests("arg/pedantic"                   "core" ${real_types})
list_tests("asec/regular"                   "core" ${real_types})
list_tests("asecd/regular"                  "core" ${real_types})
list_tests("asecpi/regular"                 "core" ${real_types})
list_tests("asin/regular"                   "core" ${real_types})
list_tests("asind/regular"                  "core" ${real_types})
list_tests("asinpi/regular"                 "core" ${real_types})
list_tests("atan/regular"                   "core" ${real_types})
list_tests("atan2/regular"                  "core" ${real_types})
list_tests("atan2/pedantic"                 "core" ${real_types})
list_tests("atan2d/regular"                 "core" ${real_types})
list_tests("atan2d/pedantic"                "core" ${real_types})
list_tests("atan2pi/regular"                "core" ${real_types})
list_tests("atan2pi/pedantic"               "core" ${real_types})
list_tests("atand/regular"                  "core" ${real_types})
list_tests("atanpi/regular"                 "core" ${real_types})
list_tests("average/regular"                "core" ${all_types})
list_tests("binarize/regular"               "core" ${all_types})
list_tests("scalar/binarize_c"     "core" ${all_types})
list_tests("bitofsign/regular"              "core" ${all_types})
list_tests("bitwise_and/regular"            "core" ${all_types})
list_tests("bitwise_andnot/regular"         "core" ${all_types})
list_tests("bitwise_cast/regular"           "core" ${all_types})
list_tests("bitwise_mask/regular"           "core" ${all_types})
list_tests("bitwise_not/regular"            "core" ${all_types})
list_tests("bitwise_notand/regular"         "core" ${all_types})
list_tests("bitwise_notor/regular"          "core" ${all_types})
list_tests("bitwise_or/regular"             "core" ${all_types})
list_tests("bitwise_ornot/regular"          "core" ${all_types})
list_tests("bitwise_select/regular"         "core" ${all_types})
list_tests("bitwise_shl/regular"            "core" ${integral_types})
list_tests("bitwise_shr/regular"            "core" ${integral_types})
list_tests("bitwise_xor/regular"            "core" ${all_types})
list_tests("ceil/regular"                   "core" ${all_types})
list_tests("clamp/regular"                  "core" ${all_types})
list_tests("conj/regular"                   "core" ${real_types})
list_tests("copysign/regular"               "core" ${all_types})
list_tests("dec/regular"                    "core" ${all_types})
list_tests("dec/saturated"                  "core" ${all_types})
list_tests("dist/regular"                   "core" ${all_types})
list_tests("dist/saturated"                 "core" ${all_types})
list_tests("div/regular"                    "core" ${all_types})
list_tests("div/saturated"                  "core" ${all_types})
list_tests("div/regular_if"                 "core" ${all_types})
list_tests("div/saturated_if"               "core" ${all_types})
list_tests("extract/regular"                "core" ${all_types})
list_tests("floor/regular"                  "core" ${all_types})
list_tests("fma/regular"                    "core" ${all_types})
##list_tests("fma/pedantic"                   "core" ${all_types})
list_tests("fms/regular"                    "core" ${all_types})
##list_tests("fms/pedantic"                   "core" ${all_types})
list_tests("fnma/regular"                   "core" ${all_types})
##list_tests("fnma/pedantic"                   "core" ${all_types})
list_tests("fnms/regular"                   "core" ${all_types})
##list_tests("fnms/pedantic"                   "core" ${all_types})
list_tests("frac/regular"                   "core" ${all_types})
list_tests("horn/regular"                   "core" ${real_types})
list_tests("horn1/regular"                  "core" ${real_types})
list_tests("hypot/regular"                  "core" ${real_types})
##list_tests("hypot/pedantic"                  "core" ${real_types})
list_tests("if_else/regular"                "core" ${all_types})
list_tests("if_else/allbits"                "core" ${all_types})
list_tests("if_else/mone"                   "core" ${all_types})
list_tests("if_else/one"                    "core" ${all_types})
list_tests("if_else/zero"                   "core" ${all_types})
list_tests("inc/regular"                    "core" ${all_types})
list_tests("inc/regular_if"                 "core" ${all_types})
list_tests("inc/saturated"                  "core" ${all_types})
list_tests("inc/saturated_if"               "core" ${all_types})
list_tests("indeg/regular"                  "core" ${real_types})
list_tests("inpi/regular"                   "core" ${real_types})
list_tests("is_denormal/regular"            "core" ${all_types})
list_tests("is_equal/regular"               "core" ${all_types})
list_tests("is_equal/numeric"               "core" ${all_types})
list_tests("is_eqz/regular"                 "core" ${all_types})
list_tests("is_even/regular"                "core" ${all_types})
list_tests("is_finite/regular"              "core" ${all_types})
list_tests("is_flint/regular"               "core" ${all_types})
list_tests("is_gez/regular"                 "core" ${all_types})
list_tests("is_greater/regular"             "core" ${all_types})
list_tests("is_greater_equal/regular"       "core" ${all_types})
list_tests("is_gtz/regular"                 "core" ${all_types})
list_tests("is_imag/regular"                "core" ${real_types})
list_tests("is_infinite/regular"            "core" ${all_types})
list_tests("is_less/regular"                "core" ${all_types})
list_tests("is_less_equal/regular"          "core" ${all_types})
list_tests("is_lessgreater/regular"         "core" ${all_types})
list_tests("is_lez/regular"                 "core" ${all_types})
list_tests("is_ltz/regular"                 "core" ${all_types})
list_tests("is_nan/regular"                 "core" ${all_types})
list_tests("is_nez/regular"                 "core" ${all_types})
list_tests("is_ngez/regular"                "core" ${all_types})
list_tests("is_ngtz/regular"                "core" ${all_types})
list_tests("is_nlez/regular"                "core" ${all_types})
list_tests("is_nltz/regular"                "core" ${all_types})
list_tests("is_normal/regular"              "core" ${all_types})
list_tests("is_not_denormal/regular"        "core" ${all_types})
list_tests("is_not_equal/regular"           "core" ${all_types})
list_tests("is_not_equal/numeric"           "core" ${all_types})
list_tests("is_not_finite/regular"          "core" ${all_types})
list_tests("is_not_greater/regular"         "core" ${all_types})
list_tests("is_not_greater_equal/regular"   "core" ${all_types})
list_tests("is_not_imag/regular"            "core" ${real_types})
list_tests("is_not_inf/regular"             "core" ${all_types})
list_tests("is_not_less/regular"            "core" ${all_types})
list_tests("is_not_less_equal/regular"      "core" ${all_types})
list_tests("is_not_nan/regular"             "core" ${all_types})
list_tests("is_not_real/regular"            "core" ${real_types})
list_tests("is_odd/regular"                 "core" ${all_types})
list_tests("is_ordered/regular"             "core" ${all_types})
list_tests("is_positive/regular"            "core" ${all_types})
list_tests("is_real/regular"                "core" ${real_types})
list_tests("is_unordered/regular"           "core" ${all_types})
list_tests("logical_and/regular"            "core" ${all_types})
list_tests("logical_andnot/regular"         "core" ${all_types})
list_tests("logical_not/regular"            "core" ${all_types})
list_tests("logical_notand/regular"         "core" ${all_types})
list_tests("logical_notor/regular"          "core" ${all_types})
list_tests("logical_or/regular"             "core" ${all_types})
list_tests("logical_ornot/regular"          "core" ${all_types})
list_tests("logical_xor/regular"            "core" ${all_types})
list_tests("max/numeric"                    "core" ${all_types})
list_tests("max/regular"                    "core" ${all_types})
list_tests("max/pedantic"                   "core" ${all_types})
list_tests("maxmag/numeric"                 "core" ${all_types})
list_tests("maxmag/regular"                 "core" ${all_types})
list_tests("maxmag/pedantic"                "core" ${all_types})
list_tests("min/numeric"                    "core" ${all_types})
list_tests("min/regular"                    "core" ${all_types})
list_tests("min/pedantic"                   "core" ${all_types})
list_tests("minmag/numeric"                 "core" ${all_types})
list_tests("minmag/regular"                 "core" ${all_types})
list_tests("minmag/pedantic"                "core" ${all_types})
list_tests("mul/regular"                    "core" ${all_types})
list_tests("mul/saturated"                  "core" ${all_types})
list_tests("mul/regular_if"                 "core" ${all_types})
list_tests("mul/saturated_if"               "core" ${all_types})
list_tests("nearest/regular"                "core" ${all_types})
list_tests("oneminus/regular"               "core" ${all_types})
list_tests("oneminus/saturated"             "core" ${all_types})
list_tests("popcnt/regular"                 "core" ${integral_types})
list_tests("rec/regular"                    "core" ${all_types})
list_tests("rec/raw"                        "core" ${all_types})
list_tests("round/regular"                  "core" ${all_types})
list_tests("rshl/regular"                   "core" ${integral_types})
list_tests("rshr/regular"                   "core" ${integral_types})
list_tests("rsqrt/regular"                  "core" ${real_types})
list_tests("trunc/regular"                  "core" ${all_types})
list_tests("saturate/regular"               "core" ${all_types})
list_tests("shl/regular"                    "core" ${integral_types})
list_tests("shr/regular"                    "core" ${integral_types})
list_tests("sign/regular"                   "core" ${all_types})
list_tests("signnz/regular"                 "core" ${all_types})
list_tests("sqr/regular"                    "core" ${all_types})
list_tests("sqr/saturated"                  "core" ${all_types})
list_tests("sqr_abs/regular"                "core" ${real_types})
list_tests("sqrt/regular"                   "core" ${real_types})
list_tests("sqrt/raw"                       "core" ${real_types})
list_tests("sub/regular"                    "core" ${all_types})
list_tests("sub/saturated"                  "core" ${all_types})
list_tests("sub/regular_if"                 "core" ${all_types})
list_tests("sub/saturated_if"               "core" ${all_types})
list_tests("unary_plus/regular"             "core" ${all_types})
list_tests("unary_minus/regular"            "core" ${all_types})
##st_tests("unary_minus/regular_if"         "core" ${all_types})

add_unit_test( "core" scalar/inf.cpp )
add_unit_test( "core" scalar/minf.cpp )
add_unit_test( "core" scalar/nan.cpp )
add_unit_test( "core" scalar/mzero.cpp )
add_unit_test( "core" scalar/signmask.cpp )

##==================================================================================================
## SIMD tests
add_unit_test( "core" simd/bitwise_cast.cpp )
list_tests("simd/toint" "core" ${real_types})
list_tests("simd/tofloat" "core" ${integral_types})
list_tests("simd/touint" "core" ${real_types})
list_tests("simd/abs" "core" ${all_types})
list_tests("simd/next" "core" ${all_types})
list_tests("simd/prev" "core" ${all_types})
list_tests("simd/all" "core" ${all_types})
list_tests("simd/add"         "core" ${all_types})
list_tests("simd/acos" "core" ${real_types})
list_tests("simd/acot" "core" ${real_types})
list_tests("simd/acsc" "core" ${real_types})
list_tests("simd/asec" "core" ${real_types})
list_tests("simd/asin" "core" ${real_types})
list_tests("simd/atan2" "core" ${real_types})
list_tests("simd/atan"  "core" ${real_types})
list_tests("simd/acosd" "core" ${real_types})
list_tests("simd/acospi" "core" ${real_types})
list_tests("simd/acotd" "core" ${real_types})
list_tests("simd/acotpi" "core" ${real_types})
list_tests("simd/acscd" "core" ${real_types})
list_tests("simd/acscpi" "core" ${real_types})
list_tests("simd/asecd" "core" ${real_types})
list_tests("simd/asecpi" "core" ${real_types})
list_tests("simd/asind" "core" ${real_types})
list_tests("simd/asinpi" "core" ${real_types})
list_tests("simd/atan2d" "core" ${real_types})
list_tests("simd/atan2pi" "core" ${real_types})
list_tests("simd/atand" "core" ${real_types})
list_tests("simd/atanpi" "core" ${real_types})
list_tests("simd/indeg" "core" ${real_types})
list_tests("simd/inpi" "core" ${real_types})
list_tests("simd/average" "core" ${all_types})
list_tests("simd/nextafter" "core" ${all_types})
list_tests("simd/arg" "core" ${real_types})
list_tests("simd/bitofsign" "core" ${all_types})
list_tests("simd/bitwise_and" "core" ${all_types})
list_tests("simd/bitwise_andnot" "core" ${all_types})
list_tests("simd/bitwise_mask/arithmetic" "core" ${all_types})
list_tests("simd/bitwise_mask/logical"    "core" ${all_types})
list_tests("simd/bitwise_not" "core" ${all_types})
list_tests("simd/bitwise_notand" "core" ${all_types})
list_tests("simd/bitwise_notor" "core" ${all_types})
list_tests("simd/bitwise_or"  "core" ${all_types})
list_tests("simd/bitwise_ornot" "core" ${all_types})
list_tests("simd/bitwise_select"  "core" ${all_types})
list_tests("simd/bitwise_shl" "core" ${integral_types})
list_tests("simd/bitwise_shr" "core" ${integral_types})
list_tests("simd/bitwise_xor" "core" ${all_types})
list_tests("simd/clamp" "core" ${all_types})
list_tests("simd/saturate" "core" ${all_types})
list_tests("simd/binarize" "core" ${all_types})
list_tests("simd/binarize_c" "core" ${all_types})
list_tests("simd/conj" "core" ${real_types})
list_tests("simd/copysign" "core" ${all_types})
list_tests("simd/dec" "core" ${all_types})
list_tests("simd/dist" "core" ${all_types})
list_tests("simd/div/arithmetic" "core" ${all_types})
list_tests("simd/div/saturated"  "core" ${all_types})
list_tests("simd/extract/arithmetic" "core" ${all_types})
list_tests("simd/extract/logical"    "core" ${all_types})
list_tests("simd/fma" "core" ${all_types})
list_tests("simd/fms" "core" ${all_types})
list_tests("simd/fnma" "core" ${all_types})
list_tests("simd/fnms" "core" ${all_types})
list_tests("simd/gather" "core" ${all_types})
list_tests("simd/horn"     "core" ${real_types})
list_tests("simd/horn1"     "core" ${real_types})
list_tests("simd/hypot"    "core" ${real_types})
list_tests("simd/if_add" "core" ${all_types})
list_tests("simd/if_allbits_else" "core" ${all_types})
list_tests("simd/if_div/arithmetic" "core" ${all_types})
list_tests("simd/if_div/saturated"  "core" ${all_types})
list_tests("simd/if_else/arithmetic" "core" ${all_types})
list_tests("simd/if_else/logical" "core" ${all_types})
list_tests("simd/if_else_allbits" "core" ${all_types})
## list_tests("simd/if_else_mone/arithmetic" "core" ${all_types})
## list_tests("simd/if_else_mone/logical" "core" ${all_types})
list_tests("simd/if_else_zero" "core" ${all_types})
## list_tests("simd/if_mone_else/arithmetic" "core" ${all_types})
## list_tests("simd/if_mone_else/logical" "core" ${all_types})
list_tests("simd/if_mul/arithmetic" "core" ${all_types})
list_tests("simd/if_mul/saturated"  "core" ${all_types})
## list_tests("simd/if_one_else/arithmetic" "core" ${all_types})
## list_tests("simd/if_one_else/logical" "core" ${all_types})
list_tests("simd/if_sub" "core" ${all_types})
list_tests("simd/if_zero_else" "core" ${all_types})
list_tests("simd/ifnot_else/arithmetic" "core" ${all_types})
list_tests("simd/ifnot_else/logical" "core" ${all_types})
list_tests("simd/is_denormal" "core" ${all_types})
list_tests("simd/is_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_equal/logical" "core" ${all_types})
list_tests("simd/is_equal_with_equal_nans/arithmetic" "core" ${all_types})
list_tests("simd/is_equal_with_equal_nans/logical" "core" ${all_types})
list_tests("simd/is_eqz" "core" ${all_types})
list_tests("simd/is_even" "core" ${all_types})
list_tests("simd/is_finite" "core" ${all_types})
list_tests("simd/is_flint" "core" ${all_types})
list_tests("simd/is_gez" "core" ${all_types})
list_tests("simd/is_greater/arithmetic" "core" ${all_types})
list_tests("simd/is_greater/logical" "core" ${all_types})
list_tests("simd/is_greater_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_greater_equal/logical" "core" ${all_types})
list_tests("simd/is_gtz" "core" ${all_types})
list_tests("simd/is_imag" "core" ${all_types})
list_tests("simd/is_infinite" "core" ${all_types})
list_tests("simd/is_less/arithmetic" "core" ${all_types})
list_tests("simd/is_less/logical" "core" ${all_types})
list_tests("simd/is_less_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_less_equal/logical" "core" ${all_types})
list_tests("simd/is_lessgreater/arithmetic" "core" ${all_types})
list_tests("simd/is_lessgreater/logical" "core" ${all_types})
list_tests("simd/is_lez" "core" ${all_types})
list_tests("simd/is_ltz" "core" ${all_types})
list_tests("simd/is_nan" "core" ${all_types})
list_tests("simd/is_negative" "core" ${all_types})
list_tests("simd/is_nez" "core" ${all_types})
list_tests("simd/is_ngez" "core" ${all_types})
list_tests("simd/is_ngtz" "core" ${all_types})
list_tests("simd/is_nlez" "core" ${all_types})
list_tests("simd/is_nltz" "core" ${all_types})
list_tests("simd/is_normal" "core" ${all_types})
list_tests("simd/is_not_denormal" "core" ${all_types})
list_tests("simd/is_not_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_not_equal/logical" "core" ${all_types})
list_tests("simd/is_not_equal_with_equal_nans/arithmetic" "core" ${all_types})
list_tests("simd/is_not_equal_with_equal_nans/logical" "core" ${all_types})
list_tests("simd/is_not_finite" "core" ${all_types})
list_tests("simd/is_not_greater/arithmetic" "core" ${all_types})
list_tests("simd/is_not_greater/logical" "core" ${all_types})
list_tests("simd/is_not_greater_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_not_greater_equal/logical" "core" ${all_types})
list_tests("simd/is_not_imag" "core" ${all_types})
list_tests("simd/is_not_inf" "core" ${all_types})
list_tests("simd/is_not_less/arithmetic" "core" ${all_types})
list_tests("simd/is_not_less/logical" "core" ${all_types})
list_tests("simd/is_not_less_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_not_less_equal/logical" "core" ${all_types})
list_tests("simd/is_not_nan" "core" ${all_types})
list_tests("simd/is_not_real" "core" ${all_types})
list_tests("simd/is_odd" "core" ${all_types})
list_tests("simd/is_ordered" "core" ${all_types})
list_tests("simd/is_positive" "core" ${all_types})
list_tests("simd/is_real" "core" ${all_types})
list_tests("simd/is_unordered" "core" ${all_types})
list_tests("simd/logical_and/arithmetic" "core" ${all_types})
list_tests("simd/logical_and/logical" "core" ${all_types})
list_tests("simd/logical_andnot/arithmetic" "core" ${all_types})
list_tests("simd/logical_andnot/logical" "core" ${all_types})
list_tests("simd/logical_not/arithmetic" "core" ${all_types})
list_tests("simd/logical_not/logical" "core" ${all_types})
list_tests("simd/logical_notand/arithmetic" "core" ${all_types})
list_tests("simd/logical_notand/logical" "core" ${all_types})
list_tests("simd/logical_notor/arithmetic" "core" ${all_types})
list_tests("simd/logical_notor/logical" "core" ${all_types})
list_tests("simd/logical_or/arithmetic" "core" ${all_types})
list_tests("simd/logical_or/logical" "core" ${all_types})
list_tests("simd/logical_ornot/arithmetic" "core" ${all_types})
list_tests("simd/logical_ornot/logical" "core" ${all_types})
list_tests("simd/logical_xor/arithmetic" "core" ${all_types})
list_tests("simd/logical_xor/logical" "core" ${all_types})
list_tests("simd/maxmag" "core" ${all_types})
list_tests("simd/minmag" "core" ${all_types})
list_tests("simd/minnummag" "core" ${all_types})
list_tests("simd/maxnummag" "core" ${all_types})
list_tests("simd/max" "core" ${all_types})
list_tests("simd/min" "core" ${all_types})
list_tests("simd/mul/arithmetic" "core" ${all_types})
list_tests("simd/mul/saturated" "core" ${all_types})
list_tests("simd/nearest" "core" ${all_types})
list_tests("simd/oneminus/arithmetic"    "core" ${all_types})
list_tests("simd/oneminus/saturated"     "core" ${all_types})
list_tests("simd/trunc"   "core" ${all_types})
list_tests("simd/floor" "core" ${all_types})
list_tests("simd/ceil"   "core" ${all_types})
list_tests("simd/rec" "core" ${all_types})
list_tests("simd/round" "core" ${all_types})
list_tests("simd/rshl" "core" ${integral_types})
list_tests("simd/rshr" "core" ${integral_types})
list_tests("simd/rsqrt" "core" ${real_types})
list_tests("simd/shl" "core" ${integral_types})
list_tests("simd/shr" "core" ${integral_types})
list_tests("simd/sign" "core" ${all_types})
list_tests("simd/signnz" "core" ${all_types})
list_tests("simd/sqr" "core" ${all_types})
list_tests("simd/sqr_abs" "core" ${real_types})
list_tests("simd/sqrt"    "core" ${all_types})
list_tests("simd/sub"         "core" ${all_types})
list_tests("simd/unary_minus" "core" ${all_types})
list_tests("simd/unary_plus" "core" ${all_types})

##==================================================================================================
## Expected failures tests

add_build_test( "core" failure/conditionnal/is_equal.cpp )
add_build_test( "core" failure/conditionnal/is_not_equal.cpp )
add_build_test( "core" failure/acos.cpp )
add_build_test( "core" failure/asin.cpp )
add_build_test( "core" failure/acot.cpp )
add_build_test( "core" failure/asec.cpp )
add_build_test( "core" failure/acsc.cpp )
add_build_test( "core" failure/atan.cpp )
add_build_test( "core" failure/atan2.cpp )
add_build_test( "core" failure/atan2d.cpp )
add_build_test( "core" failure/atan2pi.cpp )
add_build_test( "core" failure/acosd.cpp )
add_build_test( "core" failure/asind.cpp )
add_build_test( "core" failure/acotd.cpp )
add_build_test( "core" failure/asecd.cpp )
add_build_test( "core" failure/acscd.cpp )
add_build_test( "core" failure/atand.cpp )
add_build_test( "core" failure/acospi.cpp )
add_build_test( "core" failure/asinpi.cpp )
add_build_test( "core" failure/acotpi.cpp )
add_build_test( "core" failure/asecpi.cpp )
add_build_test( "core" failure/acscpi.cpp )
add_build_test( "core" failure/atanpi.cpp )
add_build_test( "core" failure/bitwise_cast.cpp )
add_build_test( "core" failure/bitwise_and.cpp )
add_build_test( "core" failure/indeg.cpp )
add_build_test( "core" failure/inpi.cpp )
add_build_test( "core" failure/sqr_abs.cpp )
add_build_test( "core" failure/arg.cpp )
