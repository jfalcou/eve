##==================================================================================================
##  EVE - Expressive Vector Engine
##  Copyright 2018 Joel FALCOU
##  Copyright 2019 Jean-Thierry Lapreste
##
##  Licensed under the MIT License <http://opensource.org/licenses/MIT>.
##  SPDX-License-Identifier: MIT
##==================================================================================================

##==================================================================================================
## scalar tests
list_tests("scalar/abs"     "core" ${all_types})
list_tests("scalar/add"     "core" ${all_types})
list_tests("scalar/bitwise_andnot" "core" ${all_types})
list_tests("scalar/bitwise_cast" "core" ${all_types})
list_tests("scalar/bitwise_mask" "core" ${all_types})
list_tests("scalar/bitwise_not"  "core" ${integral_types})
list_tests("scalar/bitwise_notand" "core" ${all_types})
list_tests("scalar/bitwise_notor" "core" ${all_types})
list_tests("scalar/bitwise_or" "core" ${all_types})
list_tests("scalar/bitwise_ornot" "core" ${all_types})
list_tests("scalar/bitwise_select"  "core" ${integral_types})
list_tests("scalar/bitwise_shl"  "core" ${integral_types})
list_tests("scalar/bitwise_shr"  "core" ${integral_types})
list_tests("scalar/bitwise_xor" "core" ${all_types})
list_tests("scalar/extract"  "core" ${all_types})
list_tests("scalar/if_else"  "core" ${all_types})
list_tests("scalar/if_else_zero"  "core" ${all_types})
list_tests("scalar/ifnot_else"  "core" ${all_types})
list_tests("scalar/is_denormal" "core" ${all_types})
list_tests("scalar/is_not_denormal" "core" ${all_types})
list_tests("scalar/is_normal" "core" ${all_types})
list_tests("scalar/is_equal" "core" ${all_types})
list_tests("scalar/is_equal_with_equal_nans" "core" ${all_types})
list_tests("scalar/is_eqz" "core" ${all_types})
list_tests("scalar/inc" "core" ${all_types})
list_tests("scalar/dec" "core" ${all_types})
list_tests("scalar/is_finite" "core" ${all_types})
list_tests("scalar/is_imag" "core" ${all_types})
list_tests("scalar/is_not_real" "core" ${all_types})
list_tests("scalar/is_real" "core" ${all_types})
list_tests("scalar/is_not_imag" "core" ${all_types})
list_tests("scalar/is_gez" "core" ${all_types})
list_tests("scalar/is_gtz" "core" ${all_types})
list_tests("scalar/is_ngtz" "core" ${all_types})
list_tests("scalar/is_nlez" "core" ${all_types})
list_tests("scalar/is_nltz" "core" ${all_types})
list_tests("scalar/is_lez" "core" ${all_types})
list_tests("scalar/is_negative" "core" ${all_types})
list_tests("scalar/is_positive" "core" ${all_types})
list_tests("scalar/is_ltz" "core" ${all_types})
list_tests("scalar/is_greater" "core" ${all_types})
list_tests("scalar/is_greater_equal" "core" ${all_types})
list_tests("scalar/is_not_greater_equal" "core" ${all_types})
list_tests("scalar/is_not_greater" "core" ${all_types})
list_tests("scalar/is_not_less_equal" "core" ${all_types})
list_tests("scalar/is_inf" "core" ${all_types})
list_tests("scalar/is_less" "core" ${all_types})
list_tests("scalar/is_lessgreater" "core" ${all_types})
list_tests("scalar/is_less_equal" "core" ${all_types})
list_tests("scalar/is_nan" "core" ${all_types})
list_tests("scalar/is_nez" "core" ${all_types})
list_tests("scalar/is_ngez" "core" ${all_types})
list_tests("scalar/is_not_equal" "core" ${all_types})
list_tests("scalar/is_not_equal_with_equal_nans" "core" ${all_types})
list_tests("scalar/is_not_finite" "core" ${all_types})
list_tests("scalar/is_not_inf" "core" ${all_types})
list_tests("scalar/is_not_less" "core" ${all_types})
list_tests("scalar/is_not_nan" "core" ${all_types})
list_tests("scalar/is_ordered" "core" ${all_types})
list_tests("scalar/is_unordered" "core" ${all_types})
list_tests("scalar/logical_and" "core" ${all_types})
list_tests("scalar/logical_andnot" "core" ${all_types})
list_tests("scalar/logical_not" "core" ${all_types})
list_tests("scalar/logical_notand" "core" ${all_types})
list_tests("scalar/logical_notor" "core" ${all_types})
list_tests("scalar/logical_ornot" "core" ${all_types})
list_tests("scalar/logical_or" "core" ${all_types})
list_tests("scalar/logical_xor" "core" ${all_types})
list_tests("scalar/min"  "core" ${all_types})   
list_tests("scalar/max"  "core" ${all_types})   
list_tests("scalar/mul"  "core" ${all_types})
list_tests("scalar/popcnt"  "core" ${integral_types})
list_tests("scalar/shl"  "core" ${integral_types})
list_tests("scalar/shr"  "core" ${integral_types})
list_tests("scalar/sub"     "core" ${all_types})
list_tests("scalar/unary_minus" "core" ${signed_types})
list_tests("scalar/unary_plus" "core" ${all_types})

add_unit_test( "core" scalar/inf.cpp )
add_unit_test( "core" scalar/minf.cpp )
add_unit_test( "core" scalar/nan.cpp )
add_unit_test( "core" scalar/mzero.cpp )
add_unit_test( "core" scalar/signmask.cpp )

##==================================================================================================
## SIMD tests
add_unit_test( "core" simd/bitwise_cast.cpp )

list_tests("simd/abs" "core" ${all_types})
list_tests("simd/add"         "core" ${all_types})
list_tests("simd/bitwise_and" "core" ${all_types})
list_tests("simd/bitwise_andnot" "core" ${all_types})
list_tests("simd/bitwise_mask/arithmetic" "core" ${all_types})
list_tests("simd/bitwise_mask/logical"    "core" ${all_types})
list_tests("simd/bitwise_not" "core" ${all_types})
list_tests("simd/bitwise_notand" "core" ${all_types})
list_tests("simd/bitwise_notor" "core" ${all_types})
list_tests("simd/bitwise_or"  "core" ${all_types})
list_tests("simd/bitwise_ornot" "core" ${all_types})
list_tests("simd/bitwise_select"  "core" ${all_types})
list_tests("simd/bitwise_shl" "core" ${integral_types})
list_tests("simd/bitwise_shr" "core" ${integral_types})
list_tests("simd/bitwise_xor" "core" ${all_types})
list_tests("simd/extract/arithmetic" "core" ${all_types})
list_tests("simd/extract/logical"    "core" ${all_types})
list_tests("simd/if_else/arithmetic" "core" ${all_types})
list_tests("simd/if_else_zero/arithmetic" "core" ${all_types})
list_tests("simd/if_else/logical" "core" ${all_types})
list_tests("simd/if_else_zero/logical" "core" ${all_types})
list_tests("simd/ifnot_else/arithmetic" "core" ${all_types})
list_tests("simd/ifnot_else/logical" "core" ${all_types})
list_tests("simd/is_denormal" "core" ${all_types})
list_tests("simd/is_not_denormal" "core" ${all_types})
list_tests("simd/is_normal" "core" ${all_types})
list_tests("simd/is_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_equal/logical" "core" ${all_types})
list_tests("simd/is_equal_with_equal_nans/arithmetic" "core" ${all_types})
list_tests("simd/is_equal_with_equal_nans/logical" "core" ${all_types})
list_tests("simd/is_eqz" "core" ${all_types})
list_tests("simd/inc" "core" ${all_types})
list_tests("simd/dec" "core" ${all_types})
list_tests("simd/is_finite" "core" ${all_types})
list_tests("simd/is_imag" "core" ${all_types})
list_tests("simd/is_not_real" "core" ${all_types})
list_tests("simd/is_real" "core" ${all_types})
list_tests("simd/is_not_imag" "core" ${all_types})
list_tests("simd/is_gez" "core" ${all_types})
list_tests("simd/is_gtz" "core" ${all_types})
list_tests("simd/is_ngtz" "core" ${all_types})
list_tests("simd/is_nlez" "core" ${all_types})
list_tests("simd/is_nltz" "core" ${all_types})
list_tests("simd/is_lez" "core" ${all_types})
list_tests("simd/is_negative" "core" ${all_types})
list_tests("simd/is_positive" "core" ${all_types})
list_tests("simd/is_ltz" "core" ${all_types})
list_tests("simd/is_greater/arithmetic" "core" ${all_types})
list_tests("simd/is_not_greater_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_not_greater/arithmetic" "core" ${all_types})
list_tests("simd/is_not_less_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_greater/logical" "core" ${all_types})
list_tests("simd/is_not_greater_equal/logical" "core" ${all_types})
list_tests("simd/is_not_greater/logical" "core" ${all_types})
list_tests("simd/is_not_less_equal/logical" "core" ${all_types})
list_tests("simd/is_greater_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_greater_equal/logical" "core" ${all_types})
list_tests("simd/is_inf" "core" ${all_types})
list_tests("simd/is_less/arithmetic" "core" ${all_types})
list_tests("simd/is_lessgreater/arithmetic" "core" ${all_types})
list_tests("simd/is_lessgreater/logical" "core" ${all_types})
list_tests("simd/is_less/logical" "core" ${all_types})
list_tests("simd/is_less_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_less_equal/logical" "core" ${all_types})
list_tests("simd/is_nan" "core" ${all_types})
list_tests("simd/is_nez" "core" ${all_types})
list_tests("simd/is_ngez" "core" ${all_types})
list_tests("simd/is_not_equal/arithmetic" "core" ${all_types})
list_tests("simd/is_not_equal/logical" "core" ${all_types})
list_tests("simd/is_not_equal_with_equal_nans/arithmetic" "core" ${all_types})
list_tests("simd/is_not_equal_with_equal_nans/logical" "core" ${all_types})
list_tests("simd/is_not_finite" "core" ${all_types})
list_tests("simd/is_not_inf" "core" ${all_types})
list_tests("simd/is_not_less/arithmetic" "core" ${all_types})
list_tests("simd/is_not_less/logical" "core" ${all_types})
list_tests("simd/is_not_nan" "core" ${all_types})
list_tests("simd/is_ordered" "core" ${all_types})
list_tests("simd/is_unordered" "core" ${all_types})
list_tests("simd/logical_and/arithmetic" "core" ${all_types})
list_tests("simd/logical_and/logical" "core" ${all_types})
list_tests("simd/logical_andnot/arithmetic" "core" ${all_types})
list_tests("simd/logical_andnot/logical" "core" ${all_types})
list_tests("simd/logical_not/arithmetic" "core" ${all_types})
list_tests("simd/logical_not/logical" "core" ${all_types})
list_tests("simd/logical_notand/arithmetic" "core" ${all_types})
list_tests("simd/logical_notand/logical" "core" ${all_types})
list_tests("simd/logical_notor/arithmetic" "core" ${all_types})
list_tests("simd/logical_notor/logical" "core" ${all_types})
list_tests("simd/logical_or/arithmetic" "core" ${all_types})
list_tests("simd/logical_or/logical" "core" ${all_types})
list_tests("simd/logical_ornot/arithmetic" "core" ${all_types})
list_tests("simd/logical_ornot/logical" "core" ${all_types})
list_tests("simd/logical_xor/arithmetic" "core" ${all_types})
list_tests("simd/logical_xor/logical" "core" ${all_types})
list_tests("simd/min" "core" ${all_types})
list_tests("simd/max" "core" ${all_types})
list_tests("simd/mul" "core" ${all_types})
list_tests("simd/shl" "core" ${integral_types})
list_tests("simd/shr" "core" ${integral_types})
list_tests("simd/sub"         "core" ${all_types})
list_tests("simd/unary_minus" "core" ${all_types})
list_tests("simd/unary_plus" "core" ${all_types})
