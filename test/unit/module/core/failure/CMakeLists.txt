##==================================================================================================
##  EVE - Expressive Vector Engine
##  Copyright 2019 Joel FALCOU
##  Copyright 2019 Jean-Thierry Lapreste
##
##  Licensed under the MIT License <http://opensource.org/licenses/MIT>.
##  SPDX-License-Identifier: MIT
##==================================================================================================

##==================================================================================================
## Expected failures tests
##==================================================================================================
check_failure( unit.core.failure is_equal.cpp      )
check_failure( unit.core.failure is_not_equal.cpp  )
check_failure( unit.core.failure acos.cpp          )
check_failure( unit.core.failure asin.cpp          )
check_failure( unit.core.failure acot.cpp          )
check_failure( unit.core.failure asec.cpp          )
check_failure( unit.core.failure acsc.cpp          )
check_failure( unit.core.failure atan.cpp          )
check_failure( unit.core.failure atan2.cpp         )
check_failure( unit.core.failure atan2d.cpp        )
check_failure( unit.core.failure atan2pi.cpp       )
check_failure( unit.core.failure acosd.cpp         )
check_failure( unit.core.failure asind.cpp         )
check_failure( unit.core.failure acotd.cpp         )
check_failure( unit.core.failure asecd.cpp         )
check_failure( unit.core.failure acscd.cpp         )
check_failure( unit.core.failure atand.cpp         )
check_failure( unit.core.failure acospi.cpp        )
check_failure( unit.core.failure asinpi.cpp        )
check_failure( unit.core.failure acotpi.cpp        )
check_failure( unit.core.failure asecpi.cpp        )
check_failure( unit.core.failure acscpi.cpp        )
check_failure( unit.core.failure atanpi.cpp        )
check_failure( unit.core.failure bit_cast.cpp      )
check_failure( unit.core.failure bit_and.cpp       )
check_failure( unit.core.failure radindeg.cpp      )
check_failure( unit.core.failure radinpi.cpp       )
check_failure( unit.core.failure sqr_abs.cpp       )
check_failure( unit.core.failure arg.cpp           )
