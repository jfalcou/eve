##==================================================================================================
##  EVE - Expressive Vector Engine
##  Copyright 2018 Joel FALCOU
##
##  Licensed under the MIT License <http://opensource.org/licenses/MIT>.
##  SPDX-License-Identifier: MIT
##==================================================================================================

##==================================================================================================
## General exhaustive tests
make_all_units(ROOT exhaustive NAME abs               ARCH scalar simd TYPES ${signed_types_32}    CARDINAL -1)  
make_all_units(ROOT exhaustive NAME acos              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME acosd             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME acosh             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME acospi            ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME acot              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME acotd             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)  
make_all_units(ROOT exhaustive NAME acoth             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME acotpi            ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME acsc              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME acscd             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME acscpi            ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME arg               ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)    
make_all_units(ROOT exhaustive NAME asec              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME asecd             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME asecpi            ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME asin              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME asind             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME asinh             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)    
make_all_units(ROOT exhaustive NAME asinpi            ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME atan              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME atand             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME atanh             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)    
make_all_units(ROOT exhaustive NAME atanpi            ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME bitofsign         ARCH scalar simd TYPES ${signed_types_32}    CARDINAL -1) 
make_all_units(ROOT exhaustive NAME bitwise_mask      ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)
make_all_units(ROOT exhaustive NAME bitwise_not       ARCH scalar simd TYPES ${integral_types}     CARDINAL -1)  
make_all_units(ROOT exhaustive NAME cbrt              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)   
make_all_units(ROOT exhaustive NAME ceil              ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)
make_all_units(ROOT exhaustive NAME conj              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1) 
make_all_units(ROOT exhaustive NAME cosh              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)  
make_all_units(ROOT exhaustive NAME coth              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)   
make_all_units(ROOT exhaustive NAME csch              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1) 
make_all_units(ROOT exhaustive NAME eps               ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1) 
make_all_units(ROOT exhaustive NAME exp               ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)   
make_all_units(ROOT exhaustive NAME exp10             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)   
make_all_units(ROOT exhaustive NAME exp2              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)   
make_all_units(ROOT exhaustive NAME expm1             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)    
make_all_units(ROOT exhaustive NAME exponent          ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1) 
##make_all_units(ROOT exhaustive NAME exponentbits      ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)    
make_all_units(ROOT exhaustive NAME floor             ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1) 
make_all_units(ROOT exhaustive NAME frac              ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1) 
make_all_units(ROOT exhaustive NAME iceil             ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)
make_all_units(ROOT exhaustive NAME ifloor            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
##make_all_units(ROOT exhaustive NAME ifrexp            ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)    
make_all_units(ROOT exhaustive NAME inc               ARCH scalar simd TYPES${all_types_32}        CARDINAL -1)  
make_all_units(ROOT exhaustive NAME indeg             ARCH scalar simd TYPES${all_types_32}        CARDINAL -1)    
make_all_units(ROOT exhaustive NAME inearest          ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
make_all_units(ROOT exhaustive NAME inpi              ARCH scalar simd TYPES${all_types_32}        CARDINAL -1)    
make_all_units(ROOT exhaustive NAME iround            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)   
make_all_units(ROOT exhaustive NAME is_denormal       ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
make_all_units(ROOT exhaustive NAME is_eqz            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1) 
make_all_units(ROOT exhaustive NAME is_even           ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1) 
make_all_units(ROOT exhaustive NAME is_finite         ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)    
make_all_units(ROOT exhaustive NAME is_flint          ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)       
make_all_units(ROOT exhaustive NAME is_gez            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
make_all_units(ROOT exhaustive NAME is_gtz            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)      
make_all_units(ROOT exhaustive NAME is_imag           ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)     
make_all_units(ROOT exhaustive NAME is_infinite       ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)   
make_all_units(ROOT exhaustive NAME is_lez            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)    
make_all_units(ROOT exhaustive NAME is_ltz            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
make_all_units(ROOT exhaustive NAME is_nan            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)    
make_all_units(ROOT exhaustive NAME is_negative       ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)
make_all_units(ROOT exhaustive NAME is_nez            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
make_all_units(ROOT exhaustive NAME is_ngez           ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)     
make_all_units(ROOT exhaustive NAME is_ngtz           ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)    
make_all_units(ROOT exhaustive NAME is_nlez           ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)    
make_all_units(ROOT exhaustive NAME is_nltz           ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
make_all_units(ROOT exhaustive NAME is_normal         ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)     
make_all_units(ROOT exhaustive NAME is_not_denormal   ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)         
make_all_units(ROOT exhaustive NAME is_not_finite     ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)    
make_all_units(ROOT exhaustive NAME is_not_imag       ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)      
make_all_units(ROOT exhaustive NAME is_not_inf        ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)     
make_all_units(ROOT exhaustive NAME is_not_nan        ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
make_all_units(ROOT exhaustive NAME is_not_real       ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)      
make_all_units(ROOT exhaustive NAME is_odd            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1) 
make_all_units(ROOT exhaustive NAME is_positive       ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
make_all_units(ROOT exhaustive NAME is_real           ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1) 
make_all_units(ROOT exhaustive NAME itrunc            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)   
make_all_units(ROOT exhaustive NAME log               ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)   
make_all_units(ROOT exhaustive NAME log10             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)   
make_all_units(ROOT exhaustive NAME log1p             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)   
make_all_units(ROOT exhaustive NAME log2              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)   
make_all_units(ROOT exhaustive NAME mantissa          ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1) 
make_all_units(ROOT exhaustive NAME nearest           ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)   
make_all_units(ROOT exhaustive NAME next              ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1) 
make_all_units(ROOT exhaustive NAME oneminus          ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)     
make_all_units(ROOT exhaustive NAME prev              ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)
make_all_units(ROOT exhaustive NAME rec               ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)  
make_all_units(ROOT exhaustive NAME round             ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)
make_all_units(ROOT exhaustive NAME rsqrt             ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)  
make_all_units(ROOT exhaustive NAME sech              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)  
make_all_units(ROOT exhaustive NAME sign              ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
make_all_units(ROOT exhaustive NAME signnz            ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)  
make_all_units(ROOT exhaustive NAME sinh              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)  
make_all_units(ROOT exhaustive NAME sqr               ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)  
make_all_units(ROOT exhaustive NAME sqr_abs           ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)  
make_all_units(ROOT exhaustive NAME sqrt              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)  
make_all_units(ROOT exhaustive NAME tanh              ARCH scalar simd TYPES ${real_types_32}      CARDINAL -1)
make_all_units(ROOT exhaustive NAME trunc             ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)
make_all_units(ROOT exhaustive NAME unary_minus       ARCH scalar simd TYPES ${signed_types_32}    CARDINAL -1)
make_all_units(ROOT exhaustive NAME unary_plus        ARCH scalar simd TYPES ${all_types_32}       CARDINAL -1)
  