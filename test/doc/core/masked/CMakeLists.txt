##==================================================================================================
##  EVE - Expressive Vector Engine
##  Copyright : EVE Project Contributors
##  SPDX-License-Identifier: BSL-1.0
##==================================================================================================
##==================================================================================================

make_unit( "doc.core.masked" abs.cpp                  )
make_unit( "doc.core.masked" absmax.cpp               )
make_unit( "doc.core.masked" absmin.cpp               )
make_unit( "doc.core.masked" add.cpp                  )
make_unit( "doc.core.masked" agm.cpp                  )
make_unit( "doc.core.masked" average.cpp              )
make_unit( "doc.core.masked" bit_and.cpp              )
make_unit( "doc.core.masked" bit_andnot.cpp           )
make_unit( "doc.core.masked" bit_ceil.cpp             )
make_unit( "doc.core.masked" bit_floor.cpp            )
make_unit( "doc.core.masked" bit_mask.cpp             )
make_unit( "doc.core.masked" bit_notand.cpp           )
make_unit( "doc.core.masked" bit_not.cpp              )
make_unit( "doc.core.masked" bit_notor.cpp            )
make_unit( "doc.core.masked" bitofsign.cpp            )
make_unit( "doc.core.masked" bit_or.cpp               )
make_unit( "doc.core.masked" bit_ornot.cpp            )
make_unit( "doc.core.masked" bit_shl.cpp              )
make_unit( "doc.core.masked" bit_shr.cpp              )
make_unit( "doc.core.masked" bit_xor.cpp              )
make_unit( "doc.core.masked" ceil.cpp                 )
make_unit( "doc.core.masked" clamp.cpp                )
make_unit( "doc.core.masked" copysign.cpp             )
make_unit( "doc.core.masked" dec.cpp                  )
make_unit( "doc.core.masked" div.cpp                  )
make_unit( "doc.core.masked" fam.cpp                  )
make_unit( "doc.core.masked" fanm.cpp                 )
make_unit( "doc.core.masked" fdim.cpp                 )
make_unit( "doc.core.masked" floor.cpp                )
make_unit( "doc.core.masked" fma.cpp                  )
make_unit( "doc.core.masked" fmod.cpp                 )
make_unit( "doc.core.masked" fms.cpp                  )
make_unit( "doc.core.masked" fnma.cpp                 )
make_unit( "doc.core.masked" fnms.cpp                 )
make_unit( "doc.core.masked" frac.cpp                 )
make_unit( "doc.core.masked" fracscale.cpp            )
make_unit( "doc.core.masked" fsm.cpp                  )
make_unit( "doc.core.masked" fsnm.cpp                 )
make_unit( "doc.core.masked" ifrexp.cpp               )
make_unit( "doc.core.masked" inc.cpp                  )
make_unit( "doc.core.masked" is_denormal.cpp          )
make_unit( "doc.core.masked" is_eqz.cpp               )
make_unit( "doc.core.masked" is_even.cpp              )
make_unit( "doc.core.masked" is_finite.cpp            )
make_unit( "doc.core.masked" is_flint.cpp             )
make_unit( "doc.core.masked" is_gez.cpp               )
make_unit( "doc.core.masked" is_gtz.cpp               )
make_unit( "doc.core.masked" is_imag.cpp              )
make_unit( "doc.core.masked" is_less.cpp              )
make_unit( "doc.core.masked" is_less_equal.cpp        )
make_unit( "doc.core.masked" is_lessgreater.cpp       )
make_unit( "doc.core.masked" is_lez.cpp               )
make_unit( "doc.core.masked" is_ltz.cpp               )
make_unit( "doc.core.masked" is_nan.cpp               )
make_unit( "doc.core.masked" is_negative.cpp          )
make_unit( "doc.core.masked" is_ngez.cpp              )
make_unit( "doc.core.masked" is_ngtz.cpp              )
make_unit( "doc.core.masked" is_nlez.cpp              )
make_unit( "doc.core.masked" is_nltz.cpp              )
make_unit( "doc.core.masked" is_normal.cpp            )
make_unit( "doc.core.masked" is_not_denormal.cpp      )
make_unit( "doc.core.masked" is_not_finite.cpp        )
make_unit( "doc.core.masked" is_not_flint.cpp         )
make_unit( "doc.core.masked" is_not_greater.cpp       )
make_unit( "doc.core.masked" is_not_greater_equal.cpp )
make_unit( "doc.core.masked" is_not_imag.cpp          )
make_unit( "doc.core.masked" is_not_infinite.cpp      )
make_unit( "doc.core.masked" is_not_less.cpp          )
make_unit( "doc.core.masked" is_not_less_equal.cpp    )
make_unit( "doc.core.masked" is_not_nan.cpp           )
make_unit( "doc.core.masked" is_not_real.cpp          )
make_unit( "doc.core.masked" is_odd.cpp               )
make_unit( "doc.core.masked" is_ordered.cpp           )
make_unit( "doc.core.masked" is_positive.cpp          )
make_unit( "doc.core.masked" is_pow2.cpp              )
make_unit( "doc.core.masked" is_real.cpp              )
make_unit( "doc.core.masked" is_unordered.cpp         )
make_unit( "doc.core.masked" ldexp.cpp                )
make_unit( "doc.core.masked" lerp.cpp                 )
make_unit( "doc.core.masked" manhattan.cpp            )
make_unit( "doc.core.masked" mantissa.cpp             )
make_unit( "doc.core.masked" mask.cpp                 )
make_unit( "doc.core.masked" maxabs.cpp               )
make_unit( "doc.core.masked" max.cpp                  )
make_unit( "doc.core.masked" maxmag.cpp               )
make_unit( "doc.core.masked" minabs.cpp               )
make_unit( "doc.core.masked" min.cpp                  )
make_unit( "doc.core.masked" minmag.cpp               )
make_unit( "doc.core.masked" minmax.cpp               )
make_unit( "doc.core.masked" minus.cpp                )
make_unit( "doc.core.masked" modf.cpp                 )
make_unit( "doc.core.masked" mul.cpp                  )
make_unit( "doc.core.masked" nearest.cpp              )
make_unit( "doc.core.masked" negabsmax.cpp            )
make_unit( "doc.core.masked" negabsmin.cpp            )
make_unit( "doc.core.masked" negate.cpp               )
make_unit( "doc.core.masked" negatenz.cpp             )
make_unit( "doc.core.masked" negmaxabs.cpp            )
make_unit( "doc.core.masked" negminabs.cpp            )
make_unit( "doc.core.masked" nextafter.cpp            )
make_unit( "doc.core.masked" next.cpp                 )
make_unit( "doc.core.masked" oneminus.cpp             )
make_unit( "doc.core.masked" prev.cpp                 )
make_unit( "doc.core.masked" rat.cpp                  )
make_unit( "doc.core.masked" rec.cpp                  )
make_unit( "doc.core.masked" reduce.cpp               )
make_unit( "doc.core.masked" rem.cpp                  )
make_unit( "doc.core.masked" round.cpp                )
make_unit( "doc.core.masked" roundscale.cpp           )
make_unit( "doc.core.masked" rshl.cpp                 )
make_unit( "doc.core.masked" rshr.cpp                 )
make_unit( "doc.core.masked" rsqrt.cpp                )
make_unit( "doc.core.masked" saturate.cpp             )
make_unit( "doc.core.masked" shl.cpp                  )
make_unit( "doc.core.masked" shr.cpp                  )
make_unit( "doc.core.masked" sign.cpp                 )
make_unit( "doc.core.masked" sign_alternate.cpp       )
make_unit( "doc.core.masked" signnz.cpp               )
make_unit( "doc.core.masked" sqr.cpp                  )
make_unit( "doc.core.masked" sqr_abs.cpp              )
make_unit( "doc.core.masked" sqrt.cpp                 )
make_unit( "doc.core.masked" sub.cpp                  )
make_unit( "doc.core.masked" trunc.cpp                )
