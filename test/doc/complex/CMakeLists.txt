##==================================================================================================
##  EVE - Expressive Vector Engine
##  Copyright : EVE Project Contributors
##  SPDX-License-Identifier: BSL-1.0
##==================================================================================================
add_subdirectory(pedantic)

make_unit( "doc.complex" abs.cpp                   )
make_unit( "doc.complex" acos.cpp                  )
make_unit( "doc.complex" acosh.cpp                 )
make_unit( "doc.complex" arg.cpp                   )
make_unit( "doc.complex" asin.cpp                  )
make_unit( "doc.complex" asinh.cpp                 )
make_unit( "doc.complex" atan.cpp                  )
make_unit( "doc.complex" atanh.cpp                 )
make_unit( "doc.complex" average.cpp               )
make_unit( "doc.complex" beta.cpp                  )
make_unit( "doc.complex" cbrt.cpp                  )
make_unit( "doc.complex" ceil.cpp                  )
make_unit( "doc.complex" conj.cpp                  )
make_unit( "doc.complex" cos.cpp                   )
make_unit( "doc.complex" cosh.cpp                  )
make_unit( "doc.complex" cospi.cpp                 )
make_unit( "doc.complex" cot.cpp                   )
make_unit( "doc.complex" dec.cpp                   )
make_unit( "doc.complex" deta.cpp                  )
make_unit( "doc.complex" digamma.cpp               )
make_unit( "doc.complex" dist.cpp                  )
make_unit( "doc.complex" erf.cpp                   )
make_unit( "doc.complex" erfcx.cpp                 )
make_unit( "doc.complex" eta.cpp                   )
make_unit( "doc.complex" exp.cpp                   )
make_unit( "doc.complex" exp2.cpp                  )
make_unit( "doc.complex" exp10.cpp                 )
make_unit( "doc.complex" expm1.cpp                 )
make_unit( "doc.complex" exp_i.cpp                 )
make_unit( "doc.complex" exp_ipi.cpp               )
make_unit( "doc.complex" faddeeva.cpp              )
make_unit( "doc.complex" floor.cpp                 )
make_unit( "doc.complex" frac.cpp                  )
make_unit( "doc.complex" i.cpp                     )
make_unit( "doc.complex" inc.cpp                   )
make_unit( "doc.complex" imag.cpp                  )
make_unit( "doc.complex" lbeta.cpp                 )
make_unit( "doc.complex" ldexp.cpp                 )
make_unit( "doc.complex" lerp.cpp                  )
make_unit( "doc.complex" log_gamma.cpp             )
make_unit( "doc.complex" log_abs.cpp               )
make_unit( "doc.complex" log.cpp                   )
make_unit( "doc.complex" log2.cpp                  )
make_unit( "doc.complex" log10.cpp                 )
make_unit( "doc.complex" log1p.cpp                 )
make_unit( "doc.complex" lrising_factorial.cpp     )
make_unit( "doc.complex" maxabs.cpp                )
make_unit( "doc.complex" minabs.cpp                )
make_unit( "doc.complex" nearest.cpp               )
make_unit( "doc.complex" negate.cpp                )
make_unit( "doc.complex" negatenz.cpp              )
make_unit( "doc.complex" oneminus.cpp              )
make_unit( "doc.complex" polar.cpp                 )
make_unit( "doc.complex" pow.cpp                   )
make_unit( "doc.complex" proj.cpp                  )
make_unit( "doc.complex" rec.cpp                   )
make_unit( "doc.complex" rising_factorial.cpp      )
make_unit( "doc.complex" real.cpp                  )
make_unit( "doc.complex" sign.cpp                  )
make_unit( "doc.complex" sin.cpp                   )
make_unit( "doc.complex" sinc.cpp                  )
make_unit( "doc.complex" sinpi.cpp                 )
make_unit( "doc.complex" sinpic.cpp                )
make_unit( "doc.complex" sinh.cpp                  )
make_unit( "doc.complex" sqr.cpp                   )
make_unit( "doc.complex" sqr_abs.cpp               )
make_unit( "doc.complex" sqrt.cpp                  )
make_unit( "doc.complex" tan.cpp                   )
make_unit( "doc.complex" tanh.cpp                  )
make_unit( "doc.complex" tanpi.cpp                 )
make_unit( "doc.complex" tgamma.cpp                )
make_unit( "doc.complex" trunc.cpp                 )
make_unit( "doc.complex" ulpdist.cpp               )
