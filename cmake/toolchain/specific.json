{
  "unit.meta.exe":  "^unit.meta\\..*\\.exe",
  "unit.arch.exe":  "^unit.arch\\..*\\.exe",
  "unit.internals.exe": "^unit.internals\\..*\\.exe",

  "unit.memory.aligned_allocator.exe": "^unit.memory.aligned_allocator.exe",
  "unit.memory.aligned_ptr.exe": "^unit.memory.aligned_ptr.exe",
  "unit.memory.is_aligned.exe": "^unit.memory.is_aligned.exe",
  "unit.memory.load.aligned.arithmetic_if_else.exe": "^unit.memory.load.aligned.arithmetic_if_else.exe",
  "unit.memory.load.aligned.arithmetic_if.exe": "^unit.memory.load.aligned.arithmetic_if.exe",
  "unit.memory.load.aligned.arithmetic.exe": "^unit.memory.load.aligned.arithmetic.exe",
  "unit.memory.load.aligned.logical.exe": "^unit.memory.load.aligned.logical.exe",
  "unit.memory.load.tuple.exe": "^unit.memory.load.tuple.exe",
//  "unit.memory.load.unaligned.arithmetic_if_else.exe": "^unit.memory.load.unaligned.arithmetic_if_else.exe",
  "unit.memory.load.unaligned.arithmetic_if.exe": "^unit.memory.load.unaligned.arithmetic_if.exe",
  "unit.memory.load.unaligned.arithmetic.exe": "^unit.memory.load.unaligned.arithmetic.exe",
  "unit.memory.load.unaligned.logical.exe": "^unit.memory.load.unaligned.logical.exe",
  "unit.memory.read.exe": "^unit.memory.read.exe",
  "unit.memory.soa_ptr.exe": "^unit.memory.soa_ptr.exe",
  "unit.memory.stack_buffer.exe": "^unit.memory.stack_buffer.exe",
//  "unit.memory.store_equivalent.exe": "^unit.memory.store_equivalent.exe",
  "unit.memory.store.aligned.exe": "^unit.memory.store.aligned.exe",
  "unit.memory.store.conditional.exe": "^unit.memory.store.conditional.exe",
  "unit.memory.store.tuple.exe": "^unit.memory.store.tuple.exe",
  "unit.memory.store.unaligned.exe": "^unit.memory.store.unaligned.exe",
  "unit.memory.unalign.exe": "^unit.memory.unalign.exe",
  "unit.memory.write.exe": "^unit.memory.write.exe",

  "unit.api.regular.arithmetic.exe":  "^unit.api.regular.arithmetic.exe",
  "unit.api.regular.bitwise.exe":  "^unit.api.regular.bitwise.exe",
  "unit.api.regular.comparisons.exe":  "^unit.api.regular.comparisons.exe",
  "unit.api.regular.conditional.exe":  "^unit.api.regular.conditional.exe",
  "unit.api.regular.logicals.exe":  "^unit.api.regular.logicals.exe",
  "unit.api.regular.pattern.exe":  "^unit.api.regular.pattern.exe",
  "unit.api.regular.replace.exe":  "^unit.api.regular.replace.exe",
  "unit.api.regular.shift.exe":  "^unit.api.regular.shift.exe",
  "unit.api.regular.swap_if.exe":  "^unit.api.regular.swap_if.exe",
  "unit.api.regular.swizzle.broadcast.exe":  "^unit.api.regular.swizzle.broadcast.exe",
  "unit.api.regular.swizzle.identity.exe":  "^unit.api.regular.swizzle.identity.exe",
  "unit.api.regular.swizzle.zero.exe":  "^unit.api.regular.swizzle.zero.exe",
  "unit.api.regular.wide.exe":  "^unit.api.regular.wide.exe",

  "unit.core.add.exe":  "^unit.core.add.exe",
  "unit.core.all.exe":  "^unit.core.all.exe",
  "unit.core.any.exe":  "^unit.core.any.exe",
  "unit.core.bit_andnot.exe":  "^unit.core.bit_andnot.exe",
  "unit.core.bit_cast.exe":  "^unit.core.bit_cast.exe",
  "unit.core.convert.exe":  "^unit.core.convert.*.exe",
  "unit.core.count_true.exe":  "^unit.core.count_true.exe",
  "unit.core.if_else.exe":  "^unit.core.min.exe",
  "unit.core.max.exe":  "^unit.core.max.exe",
  "unit.core.min.exe":  "^unit.core.min.exe",
  "unit.core.none.exe":  "^unit.core.none.exe",
  "unit.core.sqrt.exe":  "^unit.core.sqrt.exe"
}
