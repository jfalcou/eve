####################################################################################################
##  EVE - Expressive Vector Engine
##  Copyright : EVE Project Contributors
##  SPDX-License-Identifier: BSL-1.0
####################################################################################################
name: EVE - Documentation Tests
run-name: documentation

on:
  pull_request:
    branches:
      - main

concurrency:
  group: doc-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ##################################################################################################
  ## DOCUMENTATION TESTS
  ##################################################################################################
  macos:
    runs-on: [macos-15]
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { comp: 'clang' }
        - { comp: 'gcc'   }
    steps:
      - name: Print Runner Info
        run: |
          system_profiler SPHardwareDataType | grep -E "(Memory|Cores)"
      - name: Fetch current branch
        uses: actions/checkout@v4
      - name: Running CMake for ${{ matrix.cfg.comp }}
        run: |
          mkdir build && cd build
          cmake .. -G Ninja -DCMAKE_TOOLCHAIN_FILE="../cmake/toolchain/${{ matrix.cfg.comp }}.osx.cmake"
      - name: Compile Documentation Tests
        run:  cd build && ninja doc.exe
      - name: Run Documentation Tests
        run: cd build && ctest --output-on-failure -j 3 -R ^doc.*.exe

  generic:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jfalcou/compilers:v9
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { comp: clang, arch: x86    , opts: -mavx2     }
        - { comp: clang, arch: x86    , opts: -msse2     }
        - { comp: gcc  , arch: x86    , opts: -msse2     }
        - { comp: gcc  , arch: sve128 , opts: -Wno-psabi }
        - { comp: gcc  , arch: ppc64  , opts: -Wno-psabi }
    steps:
      - name: Print Runner Info
        run: |
          echo "CPU cores: $(nproc)"
          echo "Memory: $(free -h | grep '^Mem:' | awk '{print $2}')"
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1
      - name: Prepare EVE with ${{ matrix.cfg.comp }} @ ${{ matrix.cfg.arch }} with ${{ matrix.cfg.opts }}
        run:  |
          mkdir build && cd build
          cmake ..  -G Ninja -DEVE_OPTIONS="${{ matrix.cfg.opts }}" \
                    -DCMAKE_TOOLCHAIN_FILE="../cmake/toolchain/${{ matrix.cfg.comp }}.${{ matrix.cfg.arch }}.cmake"
      - name: Compile Documentation Tests
        run:  |
          cd build && ninja doc.exe
      - name: Run Documentation Tests
        run:  |
          cd build && ctest --output-on-failure -j 4 -R ^doc.*.exe
